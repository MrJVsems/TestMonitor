&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 Техника=Справочники.Техника.НайтиПоНаименованию("102168 УРАЛ Кран о139вн198");
	 ТипАнализируемыхПараметров="Время_движения";  
	 АнализируемыйГод="2021";
	 ТЗ_ДанныеДляПузырьковой.Параметры.УстановитьЗначениеПараметра("НачалоПериода",Дата(АнализируемыйГод,1,1));
	ТЗ_ДанныеДляПузырьковой.Параметры.УстановитьЗначениеПараметра("КонецПериода",Дата(АнализируемыйГод,12,31));
	 НачалоПериода = дата(2021,1,1); 
	 КонецПериода = дата(2021,1,31);
	 МесяцДляРекомендаций = "1";   
	 НачалоПериодаТр = дата(2021,1,1); 
	 КонецПериодаТР = дата(2021,12,31);
	 ДемоДанные=Истина;
	 ОбъектАнализаРасходаТоплива = Справочники.Техника.НайтиПоНаименованию("102168 УРАЛ Кран о139вн198"); 
	 НачалоПериода_РасходТоплива = дата(2021,1,1);
	 КонецПериода_РасходТоплива =  дата(2021,1,31);
	 КатегорияСтроительнойТехникиСсылка = Справочники.ГруппыТехники.НайтиПоНаименованию("Самосвал");
	 Если КатегорияСтроительнойТехникиСсылка <> Справочники.ГруппыТехники.ПустаяСсылка() Тогда
		  КатегорияСтроительнойТехники = КатегорияСтроительнойТехникиСсылка; 
	 КонецЕсли;
	 ПереключательНабор1_Набор2_Тренды=Перечисления.НаборыПараметров.НаборПараметров1;
	 ТипАппр=Перечисления.ТипыАппроксимации.Полиномиальный;
	 График1_1();
	 График1_2();
	 График1_3();
	 График1_4(); 
	 График1_5();          
	 Графики6();
	 График7();
	 ОбновитьРекомендации();

КонецПроцедуры

&НаСервере
Процедура График1_1()
	
	Запрос = Новый Запрос;
	Если Техника.Ссылка <> Справочники.Техника.ПустаяСсылка() Тогда
		Запрос.Текст ="ВЫБРАТЬ
		|	ДанныеПоТехнике.Техника КАК Техника,
		|	ДанныеПоТехнике.ДатаРаботы КАК ДатаРаботы,
		|	ВЫБОР
		|		КОГДА &П1 = ""Время_работы_двигателя""
		|			ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		|		КОГДА &П1 = ""Пробег_км""
		|			ТОГДА ДанныеПоТехнике.Пробег_км
		|		КОГДА &П1 = ""Время_движения""
		|			ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_движения_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		|		КОГДА &П1 = ""Время_работы_двигателя_в_движении""
		|			ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_в_движении_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		|		КОГДА &П1 = ""Время_работы_двигателя_без_движения""
		|			ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_без_движения_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		|		КОГДА &П1 = ""Время_работы_двигателя_на_холостом_ходу""
		|			ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_на_холостом_ходу_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		|		КОГДА &П1 = ""Время_работы_двигателя_на_нормальных_оборотах""
		|			ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		|		КОГДА &П1 = ""Время_работы_двигателя_на_предельных_оборотах""
		|			ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_на_предельных_оборотах_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		|		КОГДА &П1 = ""Время_с_выключенным_двигателем""
		|			ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_с_выключенным_двигателем_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		|		КОГДА &П1 = ""Время_работы_двигателя_под_нагрузкой""
		|			ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_под_нагрузкой_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		|	КОНЕЦ КАК АнализируемыйПараметр
		|ИЗ
		|	РегистрСведений.ДанныеПоТехнике КАК ДанныеПоТехнике
		|ГДЕ
		|	ДанныеПоТехнике.Техника = &Техника
		|	И ДанныеПоТехнике.ДатаРаботы МЕЖДУ &НачалоПериода И &КонецПериода";
	Иначе
		Запрос.Текст ="ВЫБРАТЬ
		              |	ДанныеПоТехнике.ДатаРаботы КАК ДатаРаботы,
		              |	СУММА(ВЫБОР
		              |			КОГДА &П1 = ""Время_работы_двигателя""
		              |				ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		              |			КОГДА &П1 = ""Пробег_км""
		              |				ТОГДА ДанныеПоТехнике.Пробег_км
		              |			КОГДА &П1 = ""Время_движения""
		              |				ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_движения_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		              |			КОГДА &П1 = ""Время_работы_двигателя_в_движении""
		              |				ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_в_движении_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		              |			КОГДА &П1 = ""Время_работы_двигателя_без_движения""
		              |				ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_без_движения_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		              |			КОГДА &П1 = ""Время_работы_двигателя_на_холостом_ходу""
		              |				ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_на_холостом_ходу_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		              |			КОГДА &П1 = ""Время_работы_двигателя_на_нормальных_оборотах""
		              |				ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		              |			КОГДА &П1 = ""Время_работы_двигателя_на_предельных_оборотах""
		              |				ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_на_предельных_оборотах_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		              |			КОГДА &П1 = ""Время_с_выключенным_двигателем""
		              |				ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_с_выключенным_двигателем_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		              |			КОГДА &П1 = ""Время_работы_двигателя_под_нагрузкой""
		              |				ТОГДА ВЫРАЗИТЬ(ДанныеПоТехнике.Время_работы_двигателя_под_нагрузкой_ВСекундах / 3600 КАК ЧИСЛО(10, 2))
		              |		КОНЕЦ) КАК АнализируемыйПараметр
		              |ИЗ
		              |	РегистрСведений.ДанныеПоТехнике КАК ДанныеПоТехнике
		              |ГДЕ
		              |	ДанныеПоТехнике.ДатаРаботы МЕЖДУ &НачалоПериода И &КонецПериода
		              |
		              |СГРУППИРОВАТЬ ПО
		              |	ДанныеПоТехнике.ДатаРаботы";
	КонецЕсли;
		
	Запрос.УстановитьПараметр("Техника", Техника.Ссылка);
	Запрос.УстановитьПараметр("П1", ТипАнализируемыхПараметров);
	Запрос.УстановитьПараметр("НачалоПериода", Дата(АнализируемыйГод,1,1));
	Запрос.УстановитьПараметр("КонецПериода", Дата(АнализируемыйГод,12,31,23,59,59));
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	ДиаграммаГодИзометрическая.Обновление = Ложь;
	ДиаграммаГодИзометрическая.Очистить();
	//Диаграмма.ОбластьПостроения.
	Если ТипАнализируемыхПараметров = "Пробег_км" Тогда
	//	Диаграмма.ОбластьПостроения.ШкалаЗначений.ШагШкалы = 1;
	//	Диаграмма.МаксимальноеЗначение = 24;
	    ДиаграммаГодИзометрическая.ОбластьПостроения.ШкалаЗначений.ТекстЗаголовка = "Км.";
	ИначеЕсли ТипАнализируемыхПараметров = "Литры" Тогда
		
	Иначе
		ДиаграммаГодИзометрическая.ОбластьПостроения.ШкалаЗначений.ТекстЗаголовка = "Часы";
	КонецЕсли;
	ДиаграммаГодИзометрическая.АвтоМаксимальноеЗначение = Истина;
	ДиаграммаГодИзометрическая.ОбластьПостроения.ШкалаТочек.ТекстЗаголовка = "Дни";
	ДиаграммаГодИзометрическая.ОбластьПостроения.ШкалаСерий.ТекстЗаголовка = "Месяцы";
	
	Для М = 1 по 12 Цикл
		Д = 31;
		Пока  Д > 0 Цикл
			Серия = ДиаграммаГодИзометрическая.УстановитьСерию(М);
			Точка = ДиаграммаГодИзометрическая.УстановитьТочку(Д);
			ДиаграммаГодИзометрическая.УстановитьЗначение(Точка, Серия, 0);
			Д = Д - 1;
		КонецЦикла;
	КонецЦикла;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Серия = ДиаграммаГодИзометрическая.УстановитьСерию(Месяц(ВыборкаДетальныеЗаписи.ДатаРаботы));
		
		Точка = ДиаграммаГодИзометрическая.УстановитьТочку(День(ВыборкаДетальныеЗаписи.ДатаРаботы));
		Точка.ПриоритетЦвета=Истина;
		Серия.ПриоритетЦвета=Ложь;
		//Если ВыборкаДетальныеЗаписи.Объем<>0 тогда
		//     Заполненность=Окр(ВыборкаДетальныеЗаписи.КоличествоОстаток/ВыборкаДетальныеЗаписи.Объем,3);
		// Иначе
		//	 Заполненность=0;
		//КонецЕсли;
		//Серия.Цвет=Новый Цвет(Заполненность*255,Заполненность*255, Заполненность*255);
		Точка.Цвет=Новый Цвет(30,150,13);//(Заполненность*255,Заполненность*255, Заполненность*255);   
		//Диаграмма.ВидПодписей=ВидПодписейКДиаграмме.Значение;
		ДиаграммаГодИзометрическая.УстановитьЗначение(Точка,Серия, ВыборкаДетальныеЗаписи.АнализируемыйПараметр); 
		//Диаграмма.УстановитьЗначение(Точка,Серия, Дата(1, 1, 1, 8, 15, 12));
	КонецЦикла;	
	ДиаграммаГодИзометрическая.Обновление = Истина;
КонецПроцедуры

&НаСервере
Процедура График1_2()
	
		Запрос = Новый Запрос;
		Запрос.Текст ="ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеПоТехнике.ДатаРаботы) КАК ДатаРаботы
		|ИЗ
		|	РегистрСведений.ДанныеПоТехнике КАК ДанныеПоТехнике
		|ГДЕ
		|	ДанныеПоТехнике.Техника = &Техника
		|	И ДанныеПоТехнике.Время_работы_двигателя_ВСекундах > 0
		|	И ДанныеПоТехнике.ДатаРаботы МЕЖДУ &НачалоПериода И &КонецПериода";
		Запрос1 = Новый Запрос;
		Запрос1.Текст ="ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеПоТехнике.ДатаРаботы) КАК ДатаРаботы
		|ИЗ
		|	РегистрСведений.ДанныеПоТехнике КАК ДанныеПоТехнике
		|ГДЕ
		|	ДанныеПоТехнике.Техника = &Техника
		|	И ДанныеПоТехнике.ДатаРаботы МЕЖДУ &НачалоПериода И &КонецПериода";

	Запрос.УстановитьПараметр("Техника", Техника.Ссылка);
	Запрос1.УстановитьПараметр("Техника", Техника.Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", Дата(АнализируемыйГод,1,1));
	Запрос.УстановитьПараметр("КонецПериода", Дата(АнализируемыйГод,12,31,23,59,59));
	Запрос1.УстановитьПараметр("НачалоПериода", Дата(АнализируемыйГод,1,1));
	Запрос1.УстановитьПараметр("КонецПериода", Дата(АнализируемыйГод,12,31,23,59,59));
	РезультатЗапроса = Запрос.Выполнить();
	РезультатЗапроса1 = Запрос1.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи1 = РезультатЗапроса1.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	ВыборкаДетальныеЗаписи1.Следующий();
	ДиаграммаКруговая.Обновление = Ложь;
	ДиаграммаКруговая.Очистить();
	ДиаграммаКруговая.КоличествоСерий = 0;
	ДиаграммаКруговая.КоличествоТочек = 1;
	//Диаграмма.ОбластьПостроения.
	//Диаграмма.ОбластьПостроения.ШкалаЗначений.ТекстЗаголовка = "Часы";
	ДиаграммаКруговая.АвтоМаксимальноеЗначение = Истина;
	//Диаграмма.ОбластьПостроения.ШкалаТочек.ТекстЗаголовка = "Дни";
	//Диаграмма.ОбластьПостроения.ШкалаСерий.ТекстЗаголовка = "Месяцы";
	
	СколькоНеРаботали = ВыборкаДетальныеЗаписи1.ДатаРаботы-ВыборкаДетальныеЗаписи.ДатаРаботы;
	
	Работали = ДиаграммаКруговая.УстановитьСерию("Работали");
	НеРаботали = ДиаграммаКруговая.УстановитьСерию("Не работали");
	
	ЕдинственнаяТочка = ДиаграммаКруговая.Точки.Получить(0);
	ЕдинственнаяТочка.Текст = "Работа " + Техника.Ссылка + " за год.";
	Если ВыборкаДетальныеЗаписи1.ДатаРаботы>0 Тогда
        ПодсказкаРаботала = "За год машина работала " + ВыборкаДетальныеЗаписи.ДатаРаботы + " дней. Или "+ Формат(ВыборкаДетальныеЗаписи.ДатаРаботы/ВыборкаДетальныеЗаписи1.ДатаРаботы*100,"ЧДЦ=1") +" %";
		ПодсказкаНеРаботала ="За год машина не работала " + СколькоНеРаботали + " дней. Или "+ Формат(СколькоНеРаботали/ВыборкаДетальныеЗаписи1.ДатаРаботы*100,"ЧДЦ=1") +" %";
	КонецЕсли;
	ДиаграммаКруговая.УстановитьЗначение(0, Работали, ВыборкаДетальныеЗаписи.ДатаРаботы, ПодсказкаРаботала);
	ДиаграммаКруговая.УстановитьЗначение(0, НеРаботали, СколькоНеРаботали, ПодсказкаНеРаботала);	
	ДиаграммаКруговая.Обновление = Истина;
КонецПроцедуры

&НаСервере
Процедура График1_3()	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	ДанныеПоТехнике.Техника КАК Техника,
	              |	ДанныеПоТехнике.ДатаРаботы КАК ДатаРаботы,
	              |	ДанныеПоТехнике.Время_движения_ВСекундах КАК Время_движения_ВСекундах,
	              |	ДанныеПоТехнике.Время_работы_двигателя_ВСекундах КАК Время_работы_двигателя_ВСекундах,
	              |	ДанныеПоТехнике.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах КАК Время_работы_двигателя_на_нормальных_оборотах_ВСекундах,
	              |	ДанныеПоТехнике.Время_работы_двигателя_на_предельных_оборотах_ВСекундах КАК Время_работы_двигателя_на_предельных_оборотах_ВСекундах
	              |ИЗ
	              |	РегистрСведений.ДанныеПоТехнике КАК ДанныеПоТехнике
	              |ГДЕ
	              |	ДанныеПоТехнике.Техника = &Техника
	              |	И ДанныеПоТехнике.ДатаРаботы МЕЖДУ &началоПериода И &конецПериода"; 	
	Запрос.УстановитьПараметр("Техника", Техника.Ссылка);  
	Запрос.УстановитьПараметр("началоПериода", началоПериода);
	Запрос.УстановитьПараметр("конецПериода", конецПериода);	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	ДиаграммаЛинейныйГрафик1.АвтоМаксимальноеЗначение = Истина;
	ДиаграммаЛинейныйГрафик1.Обновление = Ложь;
	ДиаграммаЛинейныйГрафик1.Очистить();
	//Диаграмма.ОбластьПостроения.		
	Серия = ДиаграммаЛинейныйГрафик1.Серии.Добавить("Время_движения");
	Серия1 = ДиаграммаЛинейныйГрафик1.Серии.Добавить("Время_работы_двигателя");
	Серия2 = ДиаграммаЛинейныйГрафик1.Серии.Добавить("Время_работы_двигателя_на_нормальных_оборотах");
	Серия3 = ДиаграммаЛинейныйГрафик1.Серии.Добавить("Время_работы_двигателя_на_предельных_оборотах"); 
	ДиаграммаЛинейныйГрафик1.ОтображатьЛегенду = Истина;
	ДиаграммаЛинейныйГрафик1.ОбластьПостроения.ШкалаТочек.ТекстЗаголовка = "Значение параметров";
	ДиаграммаЛинейныйГрафик1.ОбластьПостроения.ШкалаСерий.ТекстЗаголовка = "Месяцы";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
		Точка = ДиаграммаЛинейныйГрафик1.УстановитьТочку(формат(ВыборкаДетальныеЗаписи.ДатаРаботы, "ДФ=dd.MM.yyyy"));
		//Точка.Цвет=Новый Цвет(30,150,13);
		ДиаграммаЛинейныйГрафик1.УстановитьЗначение(Точка,Серия, ВыборкаДетальныеЗаписи.Время_движения_ВСекундах);  
		ДиаграммаЛинейныйГрафик1.УстановитьЗначение(Точка,Серия1, ВыборкаДетальныеЗаписи.Время_работы_двигателя_ВСекундах);
		ДиаграммаЛинейныйГрафик1.УстановитьЗначение(Точка,Серия2, ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах);
		ДиаграммаЛинейныйГрафик1.УстановитьЗначение(Точка,Серия3, ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_предельных_оборотах_ВСекундах);		
	КонецЦикла;	
	ДиаграммаЛинейныйГрафик1.Обновление = Истина;
КонецПроцедуры 

&НаСервере
Процедура График1_4()	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	МЕСЯЦ(ДанныеПоТехнике.ДатаРаботы) КАК Месяц,
	              |	СУММА(ДанныеПоТехнике.Время_движения_ВСекундах) КАК Время_движения_ВСекундах,
	              |	СУММА(ДанныеПоТехнике.Время_работы_двигателя_ВСекундах) КАК Время_работы_двигателя_ВСекундах,
	              |	СУММА(ДанныеПоТехнике.Время_работы_двигателя_в_движении_ВСекундах) КАК Время_работы_двигателя_в_движении_ВСекундах,
	              |	СУММА(ДанныеПоТехнике.Время_работы_двигателя_без_движения_ВСекундах) КАК Время_работы_двигателя_без_движения_ВСекундах,
	              |	СУММА(ДанныеПоТехнике.Время_работы_двигателя_на_холостом_ходу_ВСекундах) КАК Время_работы_двигателя_на_холостом_ходу_ВСекундах,
	              |	СУММА(ДанныеПоТехнике.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах) КАК Время_работы_двигателя_на_нормальных_оборотах_ВСекундах,
	              |	СУММА(ДанныеПоТехнике.Время_работы_двигателя_на_предельных_оборотах_ВСекундах) КАК Время_работы_двигателя_на_предельных_оборотах_ВСекундах,
	              |	СУММА(ДанныеПоТехнике.Время_с_выключенным_двигателем_ВСекундах) КАК Время_с_выключенным_двигателем_ВСекундах,
	              |	СУММА(ДанныеПоТехнике.Время_работы_двигателя_под_нагрузкой_ВСекундах) КАК Время_работы_двигателя_под_нагрузкой_ВСекундах
	              |ИЗ
	              |	РегистрСведений.ДанныеПоТехнике КАК ДанныеПоТехнике
	              |ГДЕ
	              |	ДанныеПоТехнике.ДатаРаботы МЕЖДУ &НачалоПериода И &КонецПериода
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	МЕСЯЦ(ДанныеПоТехнике.ДатаРаботы)"; 	  
	Запрос.УстановитьПараметр("началоПериода", Дата(АнализируемыйГод,1,1));
	Запрос.УстановитьПараметр("конецПериода", Дата(АнализируемыйГод,12,31,23,59,59));	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	//ДиаграммаПузырьки.АвтоМаксимальноеЗначение = Истина;
	ДиаграммаПузырьки.Обновление = Ложь;
	ДиаграммаПузырьки.Очистить();		
	Серия1 = ДиаграммаПузырьки.Серии.Добавить("Время движения");
	Серия1.Цвет=Новый Цвет(130,150,13);
	Серия2 = ДиаграммаПузырьки.Серии.Добавить("Время работы двигателя");
	Серия2.Цвет=Новый Цвет(30,100,13);
	Серия3 = ДиаграммаПузырьки.Серии.Добавить("Время работы двигателя на нормальных оборотах");
	Серия3.Цвет=Новый Цвет(30,250,13);
	Серия4 = ДиаграммаПузырьки.Серии.Добавить("Время работы двигателя на предельных оборотах");
	Серия4.Цвет=Новый Цвет(30,50,130);
	ДиаграммаПузырьки.ОтображатьЛегенду = Истина; 
	Инд=1;
	Пока Инд<=12 Цикл		
		Точка = ДиаграммаПузырьки.УстановитьТочку(Инд); Инд=Инд+1;
	КонецЦикла;	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
		Точка = ДиаграммаПузырьки.УстановитьТочку(ВыборкаДетальныеЗаписи.Месяц);
		ДиаграммаПузырьки.УстановитьЗначение(Точка,Серия1, Окр(ВыборкаДетальныеЗаписи.Время_движения_ВСекундах/3600,0));  
		ДиаграммаПузырьки.УстановитьЗначение(Точка,Серия2, Окр(ВыборкаДетальныеЗаписи.Время_работы_двигателя_ВСекундах/3600,0));
		ДиаграммаПузырьки.УстановитьЗначение(Точка,Серия3, Окр(ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах/3600,0));
		ДиаграммаПузырьки.УстановитьЗначение(Точка,Серия4, Окр(ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_предельных_оборотах_ВСекундах/3600,0));		
	КонецЦикла;	
	ДиаграммаПузырьки.Обновление = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьДиаграмму()
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя="ГруппаСтраница1" Тогда
		 Если Не ЗначениеЗаполнено(Техника) И Не ЗначениеЗаполнено(ТипАнализируемыхПараметров) 
		 Тогда
		     Элементы.ДиаграммаГодИзометрическая.Видимость=Ложь;
		 Иначе
		     Элементы.ДиаграммаГодИзометрическая.Видимость=Истина;
		 КонецЕсли;
		 Если Не ЗначениеЗаполнено(Техника) И Не ЗначениеЗаполнено(АнализируемыйГод)
		 Тогда
		      Элементы.ДиаграммаКруговая.Видимость=Ложь;
		 Иначе
		      Элементы.ДиаграммаКруговая.Видимость=Истина;
		 КонецЕсли;  
		 Если Не ЗначениеЗаполнено(Техника) И Не ЗначениеЗаполнено(НачалоПериода) И Не ЗначениеЗаполнено(КонецПериода)
		 Тогда
		     Элементы.ДиаграммаЛинейныйГрафик1.Видимость=Ложь;
		 Иначе
		     Элементы.ДиаграммаЛинейныйГрафик1.Видимость=Истина;
		 КонецЕсли;
		 График1_1();
	     График1_2();
		 График1_3();
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя="ГруппаСтраница2" Тогда		 
	     Если Не ЗначениеЗаполнено(АнализируемыйГод) 
		 Тогда
		    Элементы.ДиаграммаПузырьки.Видимость=Ложь;
		    Элементы.ТЗ_ДанныеДляПузырьковой.Видимость=Ложь;
		 Иначе
		    Элементы.ДиаграммаПузырьки.Видимость=Истина;
		    Элементы.ТЗ_ДанныеДляПузырьковой.Видимость=Истина;
		КонецЕсли;
		ТЗ_ДанныеДляПузырьковой.Параметры.УстановитьЗначениеПараметра("НачалоПериода",Дата(АнализируемыйГод,1,1));
		ТЗ_ДанныеДляПузырьковой.Параметры.УстановитьЗначениеПараметра("КонецПериода",Дата(АнализируемыйГод,12,31));
		График1_4();
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя="страница3" Тогда
		 Если Не ЗначениеЗаполнено(НачалоПериодаТр) и НЕ ЗначениеЗаполнено(КонецПериодаТр)
		 Тогда
		    Элементы.ДиаграммаТренд1.Видимость=Ложь;
		 Иначе
		    Элементы.ДиаграммаТренд1.Видимость=Истина;
		КонецЕсли;
		График1_5();
		ОбновитьРекомендации();
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя="Страница4" Тогда
		Графики6();
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя="Страница4Топливо" Тогда
		График7();
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя="ЗагрузкаИсходныхДанных" Тогда
		
	КонецЕсли;
 КонецПроцедуры

&НаКлиенте
Процедура началоПериодаПриИзменении(Элемент)
    ОбновитьДиаграмму();
КонецПроцедуры

&НаКлиенте
Процедура конецПериодаПриИзменении(Элемент)
    ОбновитьДиаграмму();
КонецПроцедуры

&НаКлиенте
Процедура АнализируемыйГодПриИзменении(Элемент)
    НачалоПериода = Дата(АнализируемыйГод,1,1); 
	КонецПериода = Дата(АнализируемыйГод,1,31,23,59,59);
	НачалоПериодаТр = Дата(АнализируемыйГод,1,1); 
	КонецПериодаТр = Дата(АнализируемыйГод,12,31,23,59,59);
	ТЗ_ДанныеДляПузырьковой.Параметры.УстановитьЗначениеПараметра("НачалоПериода",Дата(АнализируемыйГод,1,1));
	ТЗ_ДанныеДляПузырьковой.Параметры.УстановитьЗначениеПараметра("КонецПериода",Дата(АнализируемыйГод,12,31));
	ОбновитьДиаграмму();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	//ОбновитьДиаграмму();
КонецПроцедуры

&НаСервере
Процедура ОбновитьРекомендации()   
	списокТехники.Очистить();
	ДатаНачала = Дата(АнализируемыйГод, МесяцДляРекомендаций, 1);
	ДатаОкончания = КонецМесяца(ДатаНачала);
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеПоТехнике.Техника КАК Техника,
		|	СУММА(ДанныеПоТехнике.Время_движения_ВСекундах) КАК Время_движения_ВСекундах,
		|	СУММА(ДанныеПоТехнике.Время_работы_двигателя_ВСекундах) КАК Время_работы_двигателя_ВСекундах,
		|	СУММА(ДанныеПоТехнике.Время_работы_двигателя_в_движении_ВСекундах) КАК Время_работы_двигателя_в_движении_ВСекундах,
		|	СУММА(ДанныеПоТехнике.Время_работы_двигателя_без_движения_ВСекундах) КАК Время_работы_двигателя_без_движения_ВСекундах,
		|	СУММА(ДанныеПоТехнике.Время_работы_двигателя_на_холостом_ходу_ВСекундах) КАК Время_работы_двигателя_на_холостом_ходу_ВСекундах,
		|	СУММА(ДанныеПоТехнике.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах) КАК Время_работы_двигателя_на_нормальных_оборотах_ВСекундах,
		|	СУММА(ДанныеПоТехнике.Время_работы_двигателя_на_предельных_оборотах_ВСекундах) КАК Время_работы_двигателя_на_предельных_оборотах_ВСекундах,
		|	СУММА(ДанныеПоТехнике.Время_с_выключенным_двигателем_ВСекундах) КАК Время_с_выключенным_двигателем_ВСекундах,
		|	СУММА(ДанныеПоТехнике.Время_работы_двигателя_под_нагрузкой_ВСекундах) КАК Время_работы_двигателя_под_нагрузкой_ВСекундах,
		|	СУММА(ДанныеПоТехнике.Пробег_км) КАК Пробег_км
		|ПОМЕСТИТЬ ТЧР
		|ИЗ
		|	РегистрСведений.ДанныеПоТехнике КАК ДанныеПоТехнике
		|ГДЕ
		|	ДанныеПоТехнике.ДатаРаботы МЕЖДУ &НачалоПериода И &КонецПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПоТехнике.Техника
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЧР.Техника.Наименование КАК ТехникаНаименование
		|ИЗ
		|	ТЧР КАК ТЧР
		|ГДЕ
		|	ТЧР.Время_движения_ВСекундах = 0
		|	И ТЧР.Время_работы_двигателя_ВСекундах = 0
		|	И ТЧР.Время_работы_двигателя_в_движении_ВСекундах = 0
		|	И ТЧР.Время_работы_двигателя_без_движения_ВСекундах = 0
		|	И ТЧР.Время_работы_двигателя_на_холостом_ходу_ВСекундах = 0
		|	И ТЧР.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах = 0
		|	И ТЧР.Время_работы_двигателя_на_предельных_оборотах_ВСекундах = 0
		|	И ТЧР.Время_с_выключенным_двигателем_ВСекундах = 0
		|	И ТЧР.Время_работы_двигателя_под_нагрузкой_ВСекундах = 0
		|	И ТЧР.Пробег_км = 0";
	
	Запрос.УстановитьПараметр("КонецПериода", ДатаОкончания);
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Рекомендации = "Система определила объекты строительной техники, которые за заданный период не разу не были задействованы в работах: ";
	Индекс = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		стр = списокТехники.Добавить();
		стр.Номер = Индекс;
		стр.Название = ВыборкаДетальныеЗаписи.ТехникаНаименование;
		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцДляРекомендацийПриИзменении(Элемент)
	ОбновитьДиаграмму();
КонецПроцедуры


&НаСервере
Процедура График1_5()	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	ДанныеПоТехнике.ДатаРаботы КАК ДатаРаботы,
	              |	СУММА(ЕСТЬNULL(ДанныеПоТехнике.Время_работы_двигателя_ВСекундах / 3600, 0)) КАК Время_работы_двигателя_ВСекундах,
	              |	СУММА(ЕСТЬNULL(ДанныеПоТехнике.Время_работы_двигателя_в_движении_ВСекундах / 3600, 0)) КАК Время_работы_двигателя_в_движении_ВСекундах,
	              |	СУММА(ЕСТЬNULL(ДанныеПоТехнике.Время_работы_двигателя_без_движения_ВСекундах / 3600, 0)) КАК Время_работы_двигателя_без_движения_ВСекундах,
	              |	СУММА(ЕСТЬNULL(ДанныеПоТехнике.Время_работы_двигателя_на_холостом_ходу_ВСекундах / 3600, 0)) КАК Время_работы_двигателя_на_холостом_ходу_ВСекундах,
	              |	СУММА(ЕСТЬNULL(ДанныеПоТехнике.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах / 3600, 0)) КАК Время_работы_двигателя_на_нормальных_оборотах_ВСекундах,
	              |	СУММА(ЕСТЬNULL(ДанныеПоТехнике.Время_работы_двигателя_на_предельных_оборотах_ВСекундах / 3600, 0)) КАК Время_работы_двигателя_на_предельных_оборотах_ВСекундах,
	              |	СУММА(ЕСТЬNULL(ДанныеПоТехнике.Время_с_выключенным_двигателем_ВСекундах / 3600, 0)) КАК Время_с_выключенным_двигателем_ВСекундах,
	              |	СУММА(ЕСТЬNULL(ДанныеПоТехнике.Время_работы_двигателя_под_нагрузкой_ВСекундах / 3600, 0)) КАК Время_работы_двигателя_под_нагрузкой_ВСекундах,
	              |	ЕСТЬNULL(ДанныеПоТехнике.Время_движения_ВСекундах / 3600, 0) КАК Время_движения_ВСекундах
	              |ИЗ
	              |	РегистрСведений.ДанныеПоТехнике КАК ДанныеПоТехнике
	              |ГДЕ
	              |	ДанныеПоТехнике.ДатаРаботы МЕЖДУ &началоПериода И &конецПериода
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ДанныеПоТехнике.ДатаРаботы,
	              |	ЕСТЬNULL(ДанныеПоТехнике.Время_движения_ВСекундах / 3600, 0)
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	ДатаРаботы"; 	
	Запрос.УстановитьПараметр("началоПериода", НачалоПериодаТр);
	Запрос.УстановитьПараметр("конецПериода", конецПериодаТр);	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи1 = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи2 = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи3 = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи4 = РезультатЗапроса.Выбрать();
	// 1 диаграмма с трендом
	ДиаграммаТренд1.АвтоМаксимальноеЗначение = Истина;
	ДиаграммаТренд1.Обновление = Ложь;
	ДиаграммаТренд1.Очистить();
	Если ПереключательНабор1_Набор2_Тренды=Перечисления.НаборыПараметров.НаборПараметров1 Тогда
	    Серия1 = ДиаграммаТренд1.Серии.Добавить("Время работы двигателя");
		Серия1.Цвет=WebЦвета.Аквамарин;
	Иначе
		Серия1 = ДиаграммаТренд1.Серии.Добавить("Время работы двигателя на нормальных оборотах");
		Серия1.Цвет=WebЦвета.Коралловый;
	КонецЕсли;
	ДиаграммаТренд1.ОтображатьЛегенду = Истина;
	//ДиаграммаТренд1.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Верх;
	Линия1 = Серия1.ЛинииТренда.Добавить();  
	Линия1.ТипАппроксимации = ЗадатьТипАппроксимации();
	Линия1.ПорядокАппроксимации = 10;    
	Линия1.ОтображатьКоэффициентДетерминации = Истина;
	Линия1.ОтображатьУравнение = Истина;
	Линия1.Цвет = WebЦвета.Зеленый; 
	Если ПереключательНабор1_Набор2_Тренды=Перечисления.НаборыПараметров.НаборПараметров1 Тогда
	Пока ВыборкаДетальныеЗаписи1.Следующий() Цикл		
		Точка1 = ДиаграммаТренд1.УстановитьТочку(формат(ВыборкаДетальныеЗаписи1.ДатаРаботы, "ДФ=dd.MM.yyyy"));
		ДиаграммаТренд1.УстановитьЗначение(Точка1,Серия1, окр(ВыборкаДетальныеЗаписи1.Время_работы_двигателя_ВСекундах,0));  
	КонецЦикла;
    Иначе
	Пока ВыборкаДетальныеЗаписи1.Следующий() Цикл		
		Точка1 = ДиаграммаТренд1.УстановитьТочку(формат(ВыборкаДетальныеЗаписи1.ДатаРаботы, "ДФ=dd.MM.yyyy"));
		ДиаграммаТренд1.УстановитьЗначение(Точка1,Серия1, окр(ВыборкаДетальныеЗаписи1.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах,0));  
	КонецЦикла;
	КонецЕсли;
	ДиаграммаТренд1.Обновление = Истина; 
		// 2 диаграмма с трендом
	ДиаграммаТренд2.АвтоМаксимальноеЗначение = Истина;
	ДиаграммаТренд2.Обновление = Ложь;
	ДиаграммаТренд2.Очистить();
	Если ПереключательНабор1_Набор2_Тренды=Перечисления.НаборыПараметров.НаборПараметров1 Тогда
	     Серия2 = ДиаграммаТренд2.Серии.Добавить("Время работы двигателя в движении");
	     Серия2.Цвет=WebЦвета.ЗеленыйЛес; 
    Иначе 
	     Серия2 = ДиаграммаТренд2.Серии.Добавить("Время работы двигателя на предельных оборотах");
	     Серия2.Цвет=WebЦвета.НейтральноСиний;
	КонецЕсли;
	ДиаграммаТренд2.ОтображатьЛегенду = Истина;
	//ДиаграммаТренд2.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Верх;
	Линия2 = Серия2.ЛинииТренда.Добавить();  
	Линия2.ТипАппроксимации = ЗадатьТипАппроксимации();
	Линия2.ПорядокАппроксимации = 10;    
	Линия2.ОтображатьКоэффициентДетерминации = Истина;
	Линия2.ОтображатьУравнение = Истина;
	Линия2.Цвет = WebЦвета.СинеФиолетовый;
	Если ПереключательНабор1_Набор2_Тренды=Перечисления.НаборыПараметров.НаборПараметров1 Тогда
		Пока ВыборкаДетальныеЗаписи2.Следующий() Цикл		
			Точка2 = ДиаграммаТренд2.УстановитьТочку(формат(ВыборкаДетальныеЗаписи2.ДатаРаботы, "ДФ=dd.MM.yyyy"));
			ДиаграммаТренд2.УстановитьЗначение(Точка2,Серия2, окр(ВыборкаДетальныеЗаписи2.Время_работы_двигателя_в_движении_ВСекундах,0));  
		КонецЦикла;
	Иначе  
		Пока ВыборкаДетальныеЗаписи2.Следующий() Цикл
		   Точка2 = ДиаграммаТренд2.УстановитьТочку(формат(ВыборкаДетальныеЗаписи2.ДатаРаботы, "ДФ=dd.MM.yyyy"));
		   ДиаграммаТренд2.УстановитьЗначение(Точка2,Серия2, окр(ВыборкаДетальныеЗаписи2.Время_работы_двигателя_на_предельных_оборотах_ВСекундах,0));
		КонецЦикла;
	КонецЕсли;
	ДиаграммаТренд2.Обновление = Истина;
		// 3 диаграмма с трендом                  
	ДиаграммаТренд3.АвтоМаксимальноеЗначение = Истина;                                                 
	ДиаграммаТренд3.Обновление = Ложь;
	ДиаграммаТренд3.Очистить();
	Если ПереключательНабор1_Набор2_Тренды=Перечисления.НаборыПараметров.НаборПараметров1 Тогда
	   Серия3 = ДиаграммаТренд3.Серии.Добавить("Время работы двигателя без движения");
	   Серия3.Цвет=WebЦвета.Пурпурный;
	   Иначе
	   Серия3 = ДиаграммаТренд3.Серии.Добавить("Время с выключенным двигателем");
	   Серия3.Цвет=WebЦвета.КрасноФиолетовый;
	КонецЕсли;
	ДиаграммаТренд3.ОтображатьЛегенду = Истина;
	//ДиаграммаТренд3.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Верх;
	Линия3 = Серия3.ЛинииТренда.Добавить();  
	Линия3.ТипАппроксимации = ЗадатьТипАппроксимации();
	Линия3.ПорядокАппроксимации = 10;    
	Линия3.ОтображатьКоэффициентДетерминации = Истина;
	Линия3.ОтображатьУравнение = Истина;
	Линия3.Цвет = WebЦвета.Серый;
	Если ПереключательНабор1_Набор2_Тренды=Перечисления.НаборыПараметров.НаборПараметров1 Тогда
	Пока ВыборкаДетальныеЗаписи3.Следующий() Цикл		
		Точка3 = ДиаграммаТренд3.УстановитьТочку(формат(ВыборкаДетальныеЗаписи3.ДатаРаботы, "ДФ=dd.MM.yyyy"));
		ДиаграммаТренд3.УстановитьЗначение(Точка3,Серия3, окр(ВыборкаДетальныеЗаписи3.Время_работы_двигателя_без_движения_ВСекундах,0));  
	КонецЦикла;
    Иначе
	Пока ВыборкаДетальныеЗаписи3.Следующий() Цикл		
		Точка3 = ДиаграммаТренд3.УстановитьТочку(формат(ВыборкаДетальныеЗаписи3.ДатаРаботы, "ДФ=dd.MM.yyyy"));
		ДиаграммаТренд3.УстановитьЗначение(Точка3,Серия3, окр(ВыборкаДетальныеЗаписи3.Время_с_выключенным_двигателем_ВСекундах,0));  
	КонецЦикла;
	КонецЕсли;
	ДиаграммаТренд3.Обновление = Истина;
		// 4 диаграмма с трендом
	ДиаграммаТренд4.АвтоМаксимальноеЗначение = Истина;
	ДиаграммаТренд4.Обновление = Ложь;
	ДиаграммаТренд4.Очистить();
	
	Если ПереключательНабор1_Набор2_Тренды=Перечисления.НаборыПараметров.НаборПараметров1 Тогда
	    Серия4 = ДиаграммаТренд4.Серии.Добавить("Время работы двигателя на холостом ходу");
	    Серия4.Цвет=WebЦвета.ТемноБордовый;
    Иначе
	    Серия4 = ДиаграммаТренд4.Серии.Добавить("Время работы двигателя под нагрузкой");
	    Серия4.Цвет=WebЦвета.Сливовый;
	КОнецЕсли;
	ДиаграммаТренд4.ОтображатьЛегенду = Истина;
	//ДиаграммаТренд4.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Верх;	
	Линия4 = Серия4.ЛинииТренда.Добавить();  
	Линия4.ТипАппроксимации = ЗадатьТипАппроксимации();
	Линия4.ПорядокАппроксимации = 10;    
	Линия4.ОтображатьКоэффициентДетерминации = Истина;
	Линия4.ОтображатьУравнение = Истина;
	Линия4.Цвет = WebЦвета.Синий;
	Если ПереключательНабор1_Набор2_Тренды=Перечисления.НаборыПараметров.НаборПараметров1 Тогда
		Пока ВыборкаДетальныеЗаписи4.Следующий() Цикл		
			Точка4 = ДиаграммаТренд4.УстановитьТочку(формат(ВыборкаДетальныеЗаписи4.ДатаРаботы, "ДФ=dd.MM.yyyy"));
			ДиаграммаТренд4.УстановитьЗначение(Точка4,Серия4, окр(ВыборкаДетальныеЗаписи4.Время_работы_двигателя_на_холостом_ходу_ВСекундах,0));  
		КонецЦикла;
	Иначе
		Пока ВыборкаДетальныеЗаписи4.Следующий() Цикл		
			Точка4 = ДиаграммаТренд4.УстановитьТочку(формат(ВыборкаДетальныеЗаписи4.ДатаРаботы, "ДФ=dd.MM.yyyy"));
			ДиаграммаТренд4.УстановитьЗначение(Точка4,Серия4, окр(ВыборкаДетальныеЗаписи4.Время_работы_двигателя_под_нагрузкой_ВСекундах,0));  
		КонецЦикла;
	КонецЕсли;
	ДиаграммаТренд4.Обновление = Истина;
КонецПроцедуры 

&НаКлиенте
Процедура НачалоПериодаТрПриИзменении(Элемент)
	ОбновитьДиаграмму();
КонецПроцедуры

&НаКлиенте
Процедура ПереключательНабор1_Набор2_ТрендыПриИзменении(Элемент)
	ОбновитьДиаграмму();
КонецПроцедуры

&НаСервере
Функция ЗадатьТипАппроксимации()
	Если ТипАппр=Перечисления.ТипыАппроксимации.Линейный Тогда
		Возврат ТипАппроксимацииЛинииТрендаДиаграммы.Линейный;
	ИначеЕсли  ТипАппр=Перечисления.ТипыАппроксимации.Логарифмический Тогда
		Возврат ТипАппроксимацииЛинииТрендаДиаграммы.Логарифмический; 
	ИначеЕсли  ТипАппр=Перечисления.ТипыАппроксимации.Степенной Тогда
		Возврат ТипАппроксимацииЛинииТрендаДиаграммы.Степенной; 
	ИначеЕсли ТипАппр=Перечисления.ТипыАппроксимации.Экспоненциальный Тогда
		Возврат ТипАппроксимацииЛинииТрендаДиаграммы.Экспоненциальный; 
	Иначе
		Возврат ТипАппроксимацииЛинииТрендаДиаграммы.Полиномиальный;
	КонецЕсли;
КонецФункции


&НаКлиенте
Процедура ТипАппрПриИзменении(Элемент)
	График1_5();
КонецПроцедуры


&НаСервере
Процедура РассчетУбытковНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура РассчетУбытков(Команда)
	ПараметрыФормы = Новый Структура("Месяц", ЭтаФорма.МесяцДляРекомендаций);
	ПараметрыФормы.Вставить("Год", ЭтаФорма.АнализируемыйГод);
	ОткрытьФорму("Обработка.РасчетУпущеннойВыгоды.Форма.Форма", ПараметрыФормы);
	РассчетУбытковНаСервере();
КонецПроцедуры


&НаСервере
Процедура Графики6()
		Ответ = "В ";
		Ответ1 = "";
        Флаг = Ложь;
		Флаг1 = Ложь;

	РекомендацииПоКатегориям.Очистить();	 		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ДанныеПоТехнике.Время_работы_двигателя_на_холостом_ходу_ВСекундах) КАК Время_работы_двигателя_на_холостом_ходу_ВСекундах,
		|	СУММА(ДанныеПоТехнике.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах) КАК Время_работы_двигателя_на_нормальных_оборотах_ВСекундах,
		|	СУММА(ДанныеПоТехнике.Время_работы_двигателя_на_предельных_оборотах_ВСекундах) КАК Время_работы_двигателя_на_предельных_оборотах_ВСекундах,
		|	МЕСЯЦ(ДанныеПоТехнике.ДатаРаботы) КАК МесяцРаботы
		|ИЗ
		|	РегистрСведений.ДанныеПоТехнике КАК ДанныеПоТехнике
		|ГДЕ
		|	ДанныеПоТехнике.Техника.ГруппаТехники = &ГруппаТехники
		|	И (ДанныеПоТехнике.Время_работы_двигателя_на_холостом_ходу_ВСекундах <> 0
		|			ИЛИ ДанныеПоТехнике.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах <> 0
		|			ИЛИ ДанныеПоТехнике.Время_работы_двигателя_на_предельных_оборотах_ВСекундах <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	МЕСЯЦ(ДанныеПоТехнике.ДатаРаботы)
		|
		|УПОРЯДОЧИТЬ ПО
		|	МесяцРаботы";
	
	Запрос.УстановитьПараметр("ГруппаТехники", КатегорияСтроительнойТехники);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Для индекс = 1 по 12 цикл
	ИмяКартинкиОшибки = "НетДиаграммы" + индекс;
	ИмяДиаграммы = "Диаграмма4стр_1_" + индекс;
	Элементы[ИмяКартинкиОшибки].Видимость = Истина;
	Элементы[ИмяДиаграммы].Видимость = Ложь;	
	КонецЦикла;
	Ответ = "Для категории " + КатегорияСтроительнойТехники + " суммарное время работы на предельный оборотах составило:" + Символы.ПС; 
	Ответ1 = "Для категории " + КатегорияСтроительнойТехники + " процент работы на холостых оборотах от общего времени составил:" + Символы.ПС;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ИмяДиаграммы = "Диаграмма4стр_1_" + Строка(ВыборкаДетальныеЗаписи.МесяцРаботы);
		ИмяКартинкиОшибки = "НетДиаграммы"+ Строка(ВыборкаДетальныеЗаписи.МесяцРаботы);
		Элементы[ИмяДиаграммы].Видимость = Истина;
		Элементы[ИмяКартинкиОшибки].Видимость = Ложь;
		ЭтаФорма[ИмяДиаграммы].Обновление = Ложь;
		
		ЭтаФорма[ИмяДиаграммы].Очистить();
		ЭтаФорма[ИмяДиаграммы].КоличествоСерий = 0;
		ЭтаФорма[ИмяДиаграммы].КоличествоТочек = 1;
		//Диаграмма.ОбластьПостроения.
		//Диаграмма.ОбластьПостроения.ШкалаЗначений.ТекстЗаголовка = "Часы";
		ЭтаФорма[ИмяДиаграммы].АвтоМаксимальноеЗначение = Истина;
		//Диаграмма.ОбластьПостроения.ШкалаТочек.ТекстЗаголовка = "Дни";
		//Диаграмма.ОбластьПостроения.ШкалаСерий.ТекстЗаголовка = "Месяцы";
		
		//Работали = ДиаграммаКруговая.УстановитьСерию("Работали");
		//НеРаботали = ДиаграммаКруговая.УстановитьСерию("Не работали"); 
		Холостой = ЭтаФорма[ИмяДиаграммы].Установитьсерию("Время_работы_двигателя_на_холостом_ходу");  
		Нормальный = ЭтаФорма[ИмяДиаграммы].Установитьсерию("Время_работы_двигателя_на_нормальных_оборотах");
		Предельный = ЭтаФорма[ИмяДиаграммы].Установитьсерию("Время_работы_двигателя_на_предельных_оборотах"); 
		
		Холостой.Цвет=Новый Цвет(119, 136, 153);
		Нормальный.Цвет=Новый Цвет(50,205,50);   
		Предельный.Цвет=Новый Цвет(255, 0, 0);
		
		
		
		ЕдинственнаяТочка = ЭтаФорма[ИмяДиаграммы].Точки.Получить(0);
		//ЕдинственнаяТочка.Текст = "Работа " + Техника.Ссылка + " за год.";
		//Если ВыборкаДетальныеЗаписи1.ДатаРаботы>0 Тогда
		//    ПодсказкаРаботала = "За год машина работала " + ВыборкаДетальныеЗаписи.ДатаРаботы + " дней. Или "+ Формат(ВыборкаДетальныеЗаписи.ДатаРаботы/ВыборкаДетальныеЗаписи1.ДатаРаботы*100,"ЧДЦ=1") +" %";
		//	ПодсказкаНеРаботала ="За год машина не работала " + СколькоНеРаботали + " дней. Или "+ Формат(СколькоНеРаботали/ВыборкаДетальныеЗаписи1.ДатаРаботы*100,"ЧДЦ=1") +" %";
		//КонецЕсли;
		ЭтаФорма[ИмяДиаграммы].УстановитьЗначение(0, Холостой, ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_холостом_ходу_ВСекундах, );
		ЭтаФорма[ИмяДиаграммы].УстановитьЗначение(0, Нормальный, ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах, );
		ЭтаФорма[ИмяДиаграммы].УстановитьЗначение(0, Предельный, ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_предельных_оборотах_ВСекундах, );
		ЭтаФорма[ИмяДиаграммы].Обновление = Истина;
		
		Знаменатель = ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_холостом_ходу_ВСекундах + ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах + ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_предельных_оборотах_ВСекундах;
		Стр = РекомендацииПоКатегориям.Добавить();
		Стр.Месяц = ВыборкаДетальныеЗаписи.МесяцРаботы;
		Стр.РаботаНаНормальныхОборотах = Окр(ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах/Знаменатель * 100, 2, РежимОкругления.Окр15как20);
		Стр.РаботаНаХолостыхОборотах = Окр(ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_холостом_ходу_ВСекундах/Знаменатель * 100, 2, РежимОкругления.Окр15как20);	
		Стр.РаботаНаПредельныхОборотах = Окр(ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_предельных_оборотах_ВСекундах/Знаменатель * 100, 2, РежимОкругления.Окр15как20);
			Если ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_предельных_оборотах_ВСекундах > 0 Тогда
			Ответ = Ответ + "в " + ПредложныйМесяц(ВыборкаДетальныеЗаписи.МесяцРаботы) + " составило " + Окр(ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_предельных_оборотах_ВСекундах/60, 2, РежимОкругления.Окр15как20) +  " ч. ;" + символы.ПС;
			Флаг = Истина;
		КонецЕсли;
	Если ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_холостом_ходу_ВСекундах/Знаменатель*100 > КатегорияСтроительнойТехники.ПорогРаботыНаХолостых Тогда
			Ответ1 = Ответ1 + "в " + ПредложныйМесяц(ВыборкаДетальныеЗаписи.МесяцРаботы) + " составило " + Окр(ВыборкаДетальныеЗаписи.Время_работы_двигателя_на_холостом_ходу_ВСекундах/Знаменатель*100, 2, РежимОкругления.Окр15как20) +  " % ;" + символы.ПС;
			Флаг1 = Истина;
		КонецЕсли;
	
	КонецЦикла;
		
				
		Если Флаг Тогда
			Ответ = Ответ +Символы.ПС+ "Работа на предельных оборотах оказывает негативное влияние на состояние техники и повышает расход топлива. Необходимо стремиться уменьшить этот показатель!";
			Элементы.верх1.Заголовок = Ответ;
		КонецЕсли;
		
		Если Флаг1 Тогда
			Ответ1 = Ответ1 +Символы.ПС+ "В ходе работы на холостом ходу на свечах зажигания образуется много нагара, и сажа снижает эффективность работы свечей, что влечет падение мощности мотора. Из-за низких оборотов не может до конца сгореть бензин!";
			Элементы.низ1.Заголовок = Ответ1;
		КонецЕсли;

	
КонецПроцедуры

&НаСервере
Функция ПредложныйМесяц(НомерМесяца)
	Ответ = "";
	Если НомерМесяца = 1 Тогда
		Ответ = " январе";
	ИначеЕсли НомерМесяца = 2 Тогда
		Ответ = " феврале";
	ИначеЕсли НомерМесяца = 3 Тогда
		Ответ = " марте";
	ИначеЕсли НомерМесяца = 4 Тогда
		Ответ = " апреле";
	ИначеЕсли НомерМесяца = 5 Тогда
		Ответ = " мае";
	ИначеЕсли НомерМесяца = 6 Тогда
		Ответ = " июне";
	ИначеЕсли НомерМесяца = 7 Тогда
		Ответ = " июле";
	ИначеЕсли НомерМесяца = 8 Тогда
		Ответ = " августе";
	ИначеЕсли НомерМесяца = 9 Тогда
		Ответ = " сентябре";
	ИначеЕсли НомерМесяца = 10 Тогда
		Ответ = " октябре";
	ИначеЕсли НомерМесяца = 11 Тогда
		Ответ = " ноябре";
	ИначеЕсли НомерМесяца = 12 Тогда
		Ответ = " декабре";
	КонецЕсли;
	Возврат Ответ
КонецФункции

&НаКлиенте
Процедура КатегорияСтроительнойТехникиПриИзменении(Элемент)
	Графики6();
КонецПроцедуры


////////////////////////////// ЗАГРУЗКА /////////////////////////////////

&НаКлиенте
Процедура ПутьКФайламНачалоВыбора(Элемент,ДанныеВыбора, стандартнаяобработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбора= Новый ДиалогВыбораФайла(РежимДИалогавыборафайла.ВыборКаталога);
	ДиалогВыбора.МножественныйВыбор=Ложь;
	Диалогвыбора.Заголовок= "Выберите каталог с файлами для загрузки данных";
	Диалогвыбора.Показать(Новый ОписаниеОповещения("ПутьКФайламНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура("ДиалогВыбора", ДиалогВыбора)));
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайламНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт	
	ДиалогВыбора = ДополнительныеПараметры.ДиалогВыбора;
	Если (ВыбранныеФайлы <> Неопределено) ТОгда
		ПутьКФайлам= ДиалогВыбора.Каталог;
	конецесли;
КонецПроцедуры
	

&НаКлиенте
Процедура ИнтерактивнаяЗагрузкасФайловЗавершение(НайденныеФайлы, ДополнительныеПараметры) Экспорт	
	ФайлыОтчетности = НайденныеФайлы; 
	Файлы_dataset_stage = новый Массив;
    Файлы_vehicles = новый Массив;	
	Для каждого Файлик из ФайлыОтчетности Цикл
		Если  Лев(Файлик.Имя,13)="dataset_stage" Тогда
		   Файлы_dataset_stage.Добавить(Файлик);
		  ИначеЕсли Лев(Файлик.Имя,8)="vehicles" Тогда
		   Файлы_vehicles.Добавить(Файлик);
        КонецЕсли;
    КонецЦикла;
    КоличествоФайлов_vehicles=Файлы_vehicles.Количество();
	КоличествоФайлов_dataset_stage=Файлы_dataset_stage.Количество();
	ИнтерактивнаяЗагрузкасФайловФрагмент(КоличествоФайлов_vehicles,КоличествоФайлов_dataset_stage, Файлы_dataset_stage,Файлы_vehicles);
КонецПроцедуры

&НаКлиенте
Процедура ИнтерактивнаяЗагрузкасФайловФрагмент(Знач КоличествоФайлов_vehicles, Знач КоличествоФайлов_dataset_stage, Знач Файлы_dataset_stage, Знач Файлы_vehicles)
	
	//Перем Год, ДатаПоследняя, Дататт, День, имя, Индекс, Месяц, Минута, Процент, Сообщение, ФайлРеестра, Час, Час2;
	//
	Если КоличествоФайлов_vehicles+КоличествоФайлов_dataset_stage = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В выбранном каталоге файлы не найдены"; 
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли; 
	Если КоличествоФайлов_vehicles<>КоличествоФайлов_dataset_stage  Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В выбранном каталоге не все файлы парные!"; 
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли; 
 
	Индекс=0;
	Для Ф=0 ПО КоличествоФайлов_dataset_stage-1 Цикл
		
		Процент=Окр(Индекс/КоличествоФайлов_dataset_stage*100,0);
		Состояние("Загружено: ",Процент," Загрузка данных");
		ОбработкаПрерыванияПользователя();
		Индекс=Индекс+1;
		// Загрузка файла процедурой в общем модуле	 
	    Имя2 = Файлы_dataset_stage[Ф].Путь+"vehicles"+Сред(Файлы_dataset_stage[Ф].ИмяБезРасширения,14,10)+".xls";
		ЗагрузкаИзФайлов.ЗагрузкаФайлаСервер(Файлы_dataset_stage[Ф].ПолноеИмя,Имя2);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Файлы: "+Файлы_dataset_stage[Ф].Имя+", "+Файлы_vehicles[Ф].Имя+" загружены";
		Сообщение.Сообщить();			
	КонецЦикла;
КонецПроцедуры

&НаКлиенте 
Процедура ЗагрузитьДанные(Команда)
	Если ЗначениеЗаполнено(ПутьКФайлам) Тогда
		ФайлыОтчетности = Неопределено;
		НачатьПоискФайлов(Новый ОписаниеОповещения("ИнтерактивнаяЗагрузкасФайловЗавершение", ЭтотОбъект), ПутьКФайлам, "*.xls");
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбран каталог с файлами!"; 
		Сообщение.Сообщить();
    ВОзврат;
	КонецЕсли;	
КонецПроцедуры 


&НаСервере
Процедура ОчиститьРегистрНаСервере()	
	НаборЗаписей = РегистрыСведений.ДанныеПоТехнике.СоздатьНаборЗаписей();
	НаборЗаписей.Записать();
КонецПроцедуры 



&НаКлиенте

Процедура ПослеОтветаНаВопрос(Результат, Параметры) Экспорт 
    Если Результат = КодВозвратаДиалога.Да Тогда	
		ОчиститьРегистрНаСервере();	
	Иначе	
		Сообщить("Хорошо, не будем очищать!");	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьРегистр(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопрос",ЭтотОбъект);
	ПоказатьВопрос(Оповещение, "Вы точно хотите удалить все данные?",РежимДиалогаВопрос.ДаНетОтмена,0,КодВозвратаДиалога.Да,);	;
КонецПроцедуры

&НаСервере
Процедура График7()

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеПоТехнике.Техника КАК Техника,
		|	ДанныеПоТехнике.ДатаРаботы КАК ДатаРаботы,
		|	ДанныеПоТехнике.РасходТоплива_Фактический КАК РасходТоплива_Фактический,
		|	ДанныеПоТехнике.РасходТоплива_НаНормальныхОборотах_Плановый КАК РасходТоплива_НаНормальныхОборотах_Плановый,
		|	ДанныеПоТехнике.РасходТоплива_НаПредельныхОборотах_Плановый КАК РасходТоплива_НаПредельныхОборотах_Плановый,
		|	ДанныеПоТехнике.РасходТоплива_НаХолостыхОборотах КАК РасходТоплива_НаХолостыхОборотах,
		|	РасходТоплива_ДемоДанные.РасходТоплива_Фактический_ДемоДанные КАК РасходТоплива_Фактический_ДемоДанные
		|ИЗ
		|	РегистрСведений.ДанныеПоТехнике КАК ДанныеПоТехнике
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасходТоплива_ДемоДанные КАК РасходТоплива_ДемоДанные
		|		ПО ДанныеПоТехнике.Техника = РасходТоплива_ДемоДанные.Техника
		|			И ДанныеПоТехнике.ДатаРаботы = РасходТоплива_ДемоДанные.ДатаРаботы
		|ГДЕ
		|	ДанныеПоТехнике.ДатаРаботы МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ДанныеПоТехнике.Техника = &Техника";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода_РасходТоплива);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода_РасходТоплива);
    Запрос.УстановитьПараметр("Техника", ОбъектАнализаРасходаТоплива);		                                                                  
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ТЗ_РасходТоплива.Очистить();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовСтр=ТЗ_РасходТоплива.Добавить();
		НовСтр.Техника = ВыборкаДетальныеЗаписи.Техника;
		НовСтр.ДатаРаботы = ВыборкаДетальныеЗаписи.ДатаРаботы;
		НовСтр.РасходТоплива_НаНормальныхОборотах_Плановый = ВыборкаДетальныеЗаписи.РасходТоплива_НаНормальныхОборотах_Плановый;
		НовСтр.РасходТоплива_НаПредельныхОборотах_Плановый = ВыборкаДетальныеЗаписи.РасходТоплива_НаПредельныхОборотах_Плановый;
		НовСтр.РасходТоплива_НаХолостыхОборотах_Плановый = ВыборкаДетальныеЗаписи.РасходТоплива_НаХолостыхОборотах; 
		НовСтр.РасходПлановый = ВыборкаДетальныеЗаписи.РасходТоплива_НаНормальныхОборотах_Плановый+ВыборкаДетальныеЗаписи.РасходТоплива_НаПредельныхОборотах_Плановый+ВыборкаДетальныеЗаписи.РасходТоплива_НаХолостыхОборотах;
		Если НЕ ДемоДанные Тогда 
		    НовСтр.РасходФактический = ВыборкаДетальныеЗаписи.РасходТоплива_Фактический; 
	    Иначе
		    НовСтр.РасходФактический = ВыборкаДетальныеЗаписи.РасходТоплива_Фактический_ДемоДанные; 
		КОнецЕсли;
	КонецЦикла;
	
	
	
	//Нижняя таблица
	Запрос1 = Новый Запрос;
	Запрос1.Текст = 
		"ВЫБРАТЬ
		|	ДанныеПоТехнике.Техника КАК Техника,
		|	СУММА(ДанныеПоТехнике.РасходТоплива_Фактический) КАК РасходТоплива_Фактический,
		|	СУММА(ДанныеПоТехнике.РасходТоплива_НаНормальныхОборотах_Плановый) КАК РасходТоплива_НаНормальныхОборотах_Плановый,
		|	СУММА(ДанныеПоТехнике.РасходТоплива_НаПредельныхОборотах_Плановый) КАК РасходТоплива_НаПредельныхОборотах_Плановый,
		|	СУММА(ДанныеПоТехнике.РасходТоплива_НаХолостыхОборотах) КАК РасходТоплива_НаХолостыхОборотах,
		|	СУММА(РасходТоплива_ДемоДанные.РасходТоплива_Фактический_ДемоДанные) КАК РасходТоплива_Фактический_ДемоДанные,
		|	СУММА(ДанныеПоТехнике.РасходТоплива_НаНормальныхОборотах_Плановый + ДанныеПоТехнике.РасходТоплива_НаПредельныхОборотах_Плановый + ДанныеПоТехнике.РасходТоплива_НаХолостыхОборотах) КАК РасходТопливаПлановый
		|ИЗ
		|	РегистрСведений.ДанныеПоТехнике КАК ДанныеПоТехнике
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасходТоплива_ДемоДанные КАК РасходТоплива_ДемоДанные
		|		ПО ДанныеПоТехнике.Техника = РасходТоплива_ДемоДанные.Техника
		|			И ДанныеПоТехнике.ДатаРаботы = РасходТоплива_ДемоДанные.ДатаРаботы
		|ГДЕ
		|	ДанныеПоТехнике.ДатаРаботы МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ДанныеПоТехнике.Техника = &Техника
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПоТехнике.Техника";
	
	Запрос1.УстановитьПараметр("КонецПериода", КонецПериода_РасходТоплива);
	Запрос1.УстановитьПараметр("НачалоПериода", НачалоПериода_РасходТоплива);
    Запрос1.УстановитьПараметр("Техника", ОбъектАнализаРасходаТоплива);		                                                                  
	РезультатЗапроса = Запрос1.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ТЗ_РасходТопливаПФ.Очистить();
	План = 0;
	Факт = 0;
	Отклонение = 0;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		НовСтр=ТЗ_РасходТопливаПФ.Добавить();
		НовСтр.РасходТопливаПлановый = ВыборкаДетальныеЗаписи.РасходТопливаПлановый;	
		Если НЕ ДемоДанные Тогда 
		    НовСтр.РасходТопливаФактический = ВыборкаДетальныеЗаписи.РасходТоплива_Фактический; 
	    Иначе
		    НовСтр.РасходТопливаФактический = ВыборкаДетальныеЗаписи.РасходТоплива_Фактический_ДемоДанные; 
		КОнецЕсли;                                                                                          
	 
		Если не НовСтр.РасходТопливаПлановый = 0 Тогда	
			Отклонение = (НовСтр.РасходТопливаФактический - НовСтр.РасходТопливаПлановый)/НовСтр.РасходТопливаПлановый * 100;  
			НовСтр.Отклонение = ОКР(Отклонение, 2, 1);
		Иначе 
			Отклонение = 0;
			НовСтр.Отклонение = 0;
		КонецЕсли;
	    План = НовСтр.РасходТопливаПлановый;
		Факт = НовСтр.РасходТопливаФактический;
	КонецЕсли;

    ///ГРАФИК СО СТРЕЛКАМИ
	
	ДиаграммаАнализРасходаТоплива1.Обновление = Ложь;
	ДиаграммаАнализРасходаТоплива1.Очистить();
	ДиаграммаАнализРасходаТоплива1.КоличествоСерий = 0;
	ДиаграммаАнализРасходаТоплива1.КоличествоТочек = 1;
	ДиаграммаАнализРасходаТоплива1.АвтоМаксимальноеЗначение = Истина;
	
		
	ПланСерия = ДиаграммаАнализРасходаТоплива1.УстановитьСерию("Плановый");
	ФактСерия = ДиаграммаАнализРасходаТоплива1.УстановитьСерию("Фактический");
	
	ЕдинственнаяТочка = ДиаграммаАнализРасходаТоплива1.Точки.Получить(0);
	ЕдинственнаяТочка.Текст = "Расход топлива за период";
	
	
	
	ДиаграммаАнализРасходаТоплива1.УстановитьЗначение(0, ПланСерия, План);
	ДиаграммаАнализРасходаТоплива1.УстановитьЗначение(0, ФактСерия, Факт);
	
	Если Отклонение > 15 Тогда		
	Элементы.Группа16.Видимость = Истина;
	СообщениеПредупреждения = "По технике " + ОбъектАнализаРасходаТоплива + " обнаружено отклонение от планового расхода топлива более чем на " + 
	"15 %! Рекомендуем проверить техническое состояние техники.";
	Элементы.верх2.Заголовок = СообщениеПредупреждения;
	Иначе 
	Элементы.Группа16.Видимость = Ложь;
		
	КонецЕсли;
    Элементы.низ2.Заголовок = "Соответствие расчетного и фактического расхода топлива влияет на точность расчета плановых заправок техники. " +
	" При отклонених более 15% возможны простои техники из-за отсутствия топлива, поэтому следует вовремя выявлять причины отклонений: технические, "+
	"организационные, слив топлива водителями и т.д."; 

КонецПроцедуры

&НаКлиенте
Процедура ОбъектАнализаРаходаТопливаПриИзменении(Элемент)
	График7();
КонецПроцедуры

&НаСервере
Процедура ПересчитатьРасход_ФактНаСервере()
	Рег = РегистрыСведений.ДанныеПоТехнике;
	РегДемо = РегистрыСведений.РасходТоплива_ДемоДанные;
    Выборка = Рег.Выбрать();
	Пока Выборка.Следующий() Цикл  
		
		//НЕ ЗАБЫТЬ УБРАТЬ ЭТО УСЛОВИЕ
		//Если Выборка.Техника = Справочники.Техника.НайтиПоНаименованию("102168 УРАЛ Кран о139вн198") Тогда
		//НЕ ЗАБЫТЬ УБРАТЬ ЭТО УСЛОВИЕ

        Запись = Выборка.ПолучитьМенеджерЗаписи();
        Запись.Прочитать();
        Запись.РасходТоплива_НаНормальныхОборотах_Плановый = Запись.Время_работы_двигателя_на_нормальных_оборотах_ВСекундах/3600*Техника.РасходТоплива_НаНормальныхОборотах_Плановый_ЛЧас;
        Запись.РасходТоплива_НаПредельныхОборотах_Плановый = Запись.Время_работы_двигателя_на_предельных_оборотах_ВСекундах/3600*Техника.РасходТоплива_НаПредельныхОборотах_Плановый_ЛЧас;
		Запись.РасходТоплива_НаХолостыхОборотах = Запись.Время_работы_двигателя_на_холостом_ходу_ВСекундах/3600 * Техника.РасходТоплива_НаХолостыхОборотах_Плановый_ЛЧас ;
		Запись.Записать();
		ЗаписьДемо=РегДемо.СоздатьМенеджерЗаписи();
		ЗаписьДемо.Техника=Запись.Техника;
		ЗаписьДемо.ДатаРаботы = Запись.ДатаРаботы;
		Гсч = Новый ГенераторСлучайныхЧисел();
	    ЗаписьДемо.РасходТоплива_Фактический_ДемоДанные=(Запись.РасходТоплива_НаНормальныхОборотах_Плановый+Запись.РасходТоплива_НаПредельныхОборотах_Плановый+Запись.РасходТоплива_НаХолостыхОборотах)*(ГСЧ.СлучайноеЧисло(95,130)/100);	
		ЗаписьДемо.Записать();
		
		//НЕ ЗАБЫТЬ УБРАТЬ ЭТО УСЛОВИЕ
		//КонецЕсли;
	    //НЕ ЗАБЫТЬ УБРАТЬ ЭТО УСЛОВИЕ
		
	КонецЦикла;
	
	График7();//обновляем
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьРасход_Факт(Команда)
	ПересчитатьРасход_ФактНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДемоДанныеПриИзменении(Элемент)
	График7();
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериода_РасходТопливаПриИзменении(Элемент)
	График7();
КонецПроцедуры

&НаКлиенте
Процедура КонецПериода_РасходТопливаПриИзменении(Элемент)
	График7();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////	


